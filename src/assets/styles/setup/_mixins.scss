/* Breakpoint mixins */

@mixin for-mobile-layout {
    @media (max-width: calc($mobile-breakpoint + 40px)) {
        @content;
    }
}

@mixin for-narrow-layout {
    @media (min-width: calc($mobile-breakpoint + 40px)) {
        @content;
    }
}

@mixin for-normal-layout {
    @media (min-width: calc($narrow-breakpoint + 40px)) {
        @content;
    }
}

@mixin for-wide-layout {
    @media (min-width: calc($normal-breakpoint + 40px)) {
        @content;
    }
}

@mixin btn ($type: regular) {

    @if $type ==dark {
        background-color: $clr-btn-2;
        color: $clr6;

        &:hover {
            background-color: darken($clr-btn-2, 5%);
        }
    }

    @else if $type ==light {
        background-color: $clr-btn-1;
        color: $gray4;

        &:hover {
            background-color: darken($clr-btn-1, 5%);
        }
    }

    @else if $type =='clear' {
        background-color: $clr-bg3-light;
        color: $gray4;

        &:hover {
            background-color: darken($clr-bg3-light, 5%);
        }
    }
}



/* Media  Mixins */
@mixin aspect-ratio($width, $height) {
    position: relative;
    overflow: hidden;

    &::before {
        display: block;
        content: "";
        width: 100%;
        padding-top: calc(($height / $width) * 100%);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    >img {
        height: 100%;
        object-fit: cover;
    }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
    @media not all and (pointer: coarse) {
        &:hover {
            @content;
        }
    }
}

@mixin scroll($height) {
    @if $height ==calc(100vh - 3.5rem - 3.5rem - 15em) {
        overflow-y: scroll;
    }
}